//
// QuizQuestionResult.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct QuizQuestionResult: Codable, JSONEncodable, Hashable {

    /** Question ID */
    public var questionId: String
    /** The slang term */
    public var slangTerm: String
    /** User's selected answer */
    public var yourAnswer: String
    /** Correct answer option ID */
    public var correctAnswer: String
    /** Whether the user got it right */
    public var isCorrect: Bool
    /** Full explanation of the term */
    public var explanation: String

    public init(questionId: String, slangTerm: String, yourAnswer: String, correctAnswer: String, isCorrect: Bool, explanation: String) {
        self.questionId = questionId
        self.slangTerm = slangTerm
        self.yourAnswer = yourAnswer
        self.correctAnswer = correctAnswer
        self.isCorrect = isCorrect
        self.explanation = explanation
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case questionId = "question_id"
        case slangTerm = "slang_term"
        case yourAnswer = "your_answer"
        case correctAnswer = "correct_answer"
        case isCorrect = "is_correct"
        case explanation
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(questionId, forKey: .questionId)
        try container.encode(slangTerm, forKey: .slangTerm)
        try container.encode(yourAnswer, forKey: .yourAnswer)
        try container.encode(correctAnswer, forKey: .correctAnswer)
        try container.encode(isCorrect, forKey: .isCorrect)
        try container.encode(explanation, forKey: .explanation)
    }
}
