//
// UpgradeResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct UpgradeResponse: Codable, JSONEncodable, Hashable {

    public enum Tier: String, Codable, CaseIterable {
        case premium = "premium"
    }
    public var success: Bool
    public var tier: Tier?
    /** Subscription expiration date */
    public var expiresAt: Date?

    public init(success: Bool, tier: Tier? = nil, expiresAt: Date? = nil) {
        self.success = success
        self.tier = tier
        self.expiresAt = expiresAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case success
        case tier
        case expiresAt = "expires_at"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(success, forKey: .success)
        try container.encodeIfPresent(tier, forKey: .tier)
        try container.encodeIfPresent(expiresAt, forKey: .expiresAt)
    }
}
