//
// SlangSubmissionResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct SlangSubmissionResponse: Codable, JSONEncodable, Hashable {

    public enum Status: String, Codable, CaseIterable {
        case pending = "pending"
        case approved = "approved"
        case rejected = "rejected"
    }
    /** Unique submission ID */
    public var submissionId: String
    /** Current submission status */
    public var status: Status
    /** Success message */
    public var message: String
    /** Submission timestamp */
    public var createdAt: Date

    public init(submissionId: String, status: Status, message: String, createdAt: Date) {
        self.submissionId = submissionId
        self.status = status
        self.message = message
        self.createdAt = createdAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case submissionId = "submission_id"
        case status
        case message
        case createdAt = "created_at"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(submissionId, forKey: .submissionId)
        try container.encode(status, forKey: .status)
        try container.encode(message, forKey: .message)
        try container.encode(createdAt, forKey: .createdAt)
    }
}
