//
// UpvoteResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct UpvoteResponse: Codable, JSONEncodable, Hashable {

    public static let upvotesRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    /** The upvoted submission ID */
    public var submissionId: String
    /** Total upvote count after this upvote */
    public var upvotes: Int
    /** Success message */
    public var message: String

    public init(submissionId: String, upvotes: Int, message: String) {
        self.submissionId = submissionId
        self.upvotes = upvotes
        self.message = message
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case submissionId = "submission_id"
        case upvotes
        case message
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(submissionId, forKey: .submissionId)
        try container.encode(upvotes, forKey: .upvotes)
        try container.encode(message, forKey: .message)
    }
}
