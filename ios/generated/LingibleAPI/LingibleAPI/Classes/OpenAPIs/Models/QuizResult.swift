//
// QuizResult.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct QuizResult: Codable, JSONEncodable, Hashable {

    /** Challenge ID */
    public var challengeId: String
    /** Total score achieved */
    public var score: Int
    /** Maximum possible score */
    public var totalPossible: Int
    /** Number of correct answers */
    public var correctCount: Int
    /** Total number of questions */
    public var totalQuestions: Int
    /** Time taken to complete */
    public var timeTakenSeconds: Int
    /** Bonus points for fast completion */
    public var timeBonusPoints: Int
    /** Per-question results */
    public var results: [QuizQuestionResult]
    /** Text for sharing results */
    public var shareText: String
    /** URL for sharing results (future feature) */
    public var shareUrl: String?

    public init(challengeId: String, score: Int, totalPossible: Int, correctCount: Int, totalQuestions: Int, timeTakenSeconds: Int, timeBonusPoints: Int, results: [QuizQuestionResult], shareText: String, shareUrl: String? = nil) {
        self.challengeId = challengeId
        self.score = score
        self.totalPossible = totalPossible
        self.correctCount = correctCount
        self.totalQuestions = totalQuestions
        self.timeTakenSeconds = timeTakenSeconds
        self.timeBonusPoints = timeBonusPoints
        self.results = results
        self.shareText = shareText
        self.shareUrl = shareUrl
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case challengeId = "challenge_id"
        case score
        case totalPossible = "total_possible"
        case correctCount = "correct_count"
        case totalQuestions = "total_questions"
        case timeTakenSeconds = "time_taken_seconds"
        case timeBonusPoints = "time_bonus_points"
        case results
        case shareText = "share_text"
        case shareUrl = "share_url"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(challengeId, forKey: .challengeId)
        try container.encode(score, forKey: .score)
        try container.encode(totalPossible, forKey: .totalPossible)
        try container.encode(correctCount, forKey: .correctCount)
        try container.encode(totalQuestions, forKey: .totalQuestions)
        try container.encode(timeTakenSeconds, forKey: .timeTakenSeconds)
        try container.encode(timeBonusPoints, forKey: .timeBonusPoints)
        try container.encode(results, forKey: .results)
        try container.encode(shareText, forKey: .shareText)
        try container.encodeIfPresent(shareUrl, forKey: .shareUrl)
    }
}
