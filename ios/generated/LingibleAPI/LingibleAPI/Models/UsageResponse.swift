//
// UsageResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct UsageResponse: Codable, JSONEncodable, Hashable {

    public enum Tier: String, Codable, CaseIterable {
        case free = "free"
        case premium = "premium"
    }
    /** User tier */
    public var tier: Tier?
    /** Daily translation limit */
    public var dailyLimit: Int?
    /** Number of translations used today */
    public var dailyUsed: Int?
    /** Number of translations remaining today */
    public var dailyRemaining: Int?
    /** Next daily reset date */
    public var resetDate: Date?

    public init(tier: Tier? = nil, dailyLimit: Int? = nil, dailyUsed: Int? = nil, dailyRemaining: Int? = nil, resetDate: Date? = nil) {
        self.tier = tier
        self.dailyLimit = dailyLimit
        self.dailyUsed = dailyUsed
        self.dailyRemaining = dailyRemaining
        self.resetDate = resetDate
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case tier
        case dailyLimit = "daily_limit"
        case dailyUsed = "daily_used"
        case dailyRemaining = "daily_remaining"
        case resetDate = "reset_date"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(tier, forKey: .tier)
        try container.encodeIfPresent(dailyLimit, forKey: .dailyLimit)
        try container.encodeIfPresent(dailyUsed, forKey: .dailyUsed)
        try container.encodeIfPresent(dailyRemaining, forKey: .dailyRemaining)
        try container.encodeIfPresent(resetDate, forKey: .resetDate)
    }
}
