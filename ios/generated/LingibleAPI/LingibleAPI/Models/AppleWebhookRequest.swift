//
// AppleWebhookRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct AppleWebhookRequest: Codable, JSONEncodable, Hashable {

    public enum NotificationType: String, Codable, CaseIterable {
        case initialBuy = "INITIAL_BUY"
        case cancel = "CANCEL"
        case renewal = "RENEWAL"
        case interactiveRenewal = "INTERACTIVE_RENEWAL"
        case didChangeRenewalPref = "DID_CHANGE_RENEWAL_PREF"
        case didChangeRenewalStatus = "DID_CHANGE_RENEWAL_STATUS"
        case priceIncreaseConsent = "PRICE_INCREASE_CONSENT"
        case refund = "REFUND"
    }
    /** Type of Apple subscription notification */
    public var notificationType: NotificationType
    /** Apple transaction ID */
    public var transactionId: String
    /** Base64 encoded receipt data from Apple */
    public var receiptData: String

    public init(notificationType: NotificationType, transactionId: String, receiptData: String) {
        self.notificationType = notificationType
        self.transactionId = transactionId
        self.receiptData = receiptData
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case notificationType = "notification_type"
        case transactionId = "transaction_id"
        case receiptData = "receipt_data"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(notificationType, forKey: .notificationType)
        try container.encode(transactionId, forKey: .transactionId)
        try container.encode(receiptData, forKey: .receiptData)
    }
}
