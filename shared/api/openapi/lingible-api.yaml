openapi: 3.0.3
info:
  title: Lingible API
  description: API for translating GenZ/teen slang to English and vice versa using AWS Bedrock
  version: 1.0.0
  contact:
    name: Lingible Team
    url: https://lingible.com
  license:
    name: Proprietary
    url: https://lingible.com/license

servers:
  - url: https://api.dev.lingible.com
    description: Development server
  - url: https://api.lingible.com
    description: Production server

security:
  - BearerAuth: []

paths:
  /health:
    get:
      summary: Health check endpoint
      description: Returns the health status of the API
      tags:
        - System
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        '500':
          description: API is unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /translate:
    post:
      summary: Translate teen slang
      description: Translate GenZ/teen slang to formal English and vice versa using AWS Bedrock AI
      tags:
        - Translation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TranslationRequest'
      responses:
        '200':
          description: Translation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslationResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /translations:
    get:
      summary: Get slang translation history
      description: Get user's slang translation history (premium feature)
      tags:
        - Translation
      parameters:
        - name: limit
          in: query
          description: Number of translations to return
          required: false
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
        - name: offset
          in: query
          description: Number of translations to skip
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
      responses:
        '200':
          description: Translation history retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslationHistoryResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Premium feature required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /translations/delete-all:
    delete:
      summary: Clear all slang translations
      description: Delete all slang translations for the user (premium feature)
      tags:
        - Translation
      responses:
        '200':
          description: All translations deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Premium feature required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /translations/{translationId}:
    delete:
      summary: Delete specific slang translation
      description: Delete a specific slang translation by ID
      tags:
        - Translation
      parameters:
        - name: translationId
          in: path
          required: true
          description: Translation ID
          schema:
            type: string
      responses:
        '200':
          description: Translation deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Slang translation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /user/profile:
    get:
      summary: Get user profile
      description: Get the current user's profile information
      tags:
        - User
      responses:
        '200':
          description: User profile retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /user/usage:
    get:
      summary: Get usage statistics
      description: Get the current user's usage statistics
      tags:
        - User
      responses:
        '200':
          description: Usage statistics retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /user/upgrade:
    post:
      summary: Upgrade user subscription
      description: Upgrade user to premium subscription
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpgradeRequest'
      responses:
        '200':
          description: User upgraded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpgradeResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /webhook/apple:
    post:
      summary: Apple webhook for subscription notifications
      description: Webhook endpoint for Apple App Store subscription notifications
      tags:
        - Webhooks
      security: []  # No authentication required for webhooks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppleWebhookRequest'
      responses:
        '200':
          description: Webhook processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
        '400':
          description: Invalid webhook payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /trending:
    get:
      summary: Get trending GenZ slang terms
      description: |
        Get a list of currently trending GenZ slang terms with popularity scores and metadata.

        **Free Tier Features:**
        - Access to top 10 trending slang terms
        - Basic definitions and categories
        - Limited to 'slang' category only

        **Premium Tier Features:**
        - Access to up to 100 trending terms
        - All categories (slang, meme, expression, hashtag, phrase)
        - Detailed usage examples and origins
        - Related terms and synonyms
        - Search and translation counts
        - Advanced filtering options
      tags:
        - Trending
      parameters:
        - name: limit
          in: query
          description: |
            Number of trending terms to return.
            - Free tier: Maximum 10 terms
            - Premium tier: Maximum 100 terms
          required: false
          schema:
            type: integer
            default: 50
            minimum: 1
            maximum: 100
        - name: category
          in: query
          description: |
            Filter by trending category.
            - Free tier: Only 'slang' category allowed
            - Premium tier: All categories available
          required: false
          schema:
            type: string
            enum: [slang, meme, expression, hashtag, phrase]
        - name: active_only
          in: query
          description: Show only active trending terms
          required: false
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Trending terms retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrendingListResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    HealthResponse:
      type: object
      properties:
        status:
          type: string
          description: Service status
          example: "healthy"

    TranslationRequest:
      type: object
      required:
        - text
        - direction
      properties:
        text:
          type: string
          description: Text to translate
          maxLength: 1000
          example: "Hello, how are you doing today?"
        direction:
          type: string
          description: Translation direction
          enum: ["english_to_genz", "genz_to_english"]
          example: "english_to_genz"

    TranslationResponse:
      type: object
      properties:
        translation_id:
          type: string
          description: Unique translation ID
          example: "trans_123456789"
        original_text:
          type: string
          example: "Hello, how are you doing today?"
        translated_text:
          type: string
          example: "Yo, what's good fam?"
        direction:
          type: string
          description: Translation direction used
          enum: ["english_to_genz", "genz_to_english"]
          example: "english_to_genz"
        confidence_score:
          type: number
          format: float
          minimum: 0
          maximum: 1
          example: 0.95
        created_at:
          type: string
          format: date-time
          description: "Translation timestamp"
          example: "2024-12-19T10:30:00Z"
        processing_time_ms:
          type: integer
          description: Processing time in milliseconds
          example: 1250
        model_used:
          type: string
          description: AI model used for translation
          example: "anthropic.claude-3-haiku-20240307-v1:0"

    TranslationHistoryItemResponse:
      type: object
      properties:
        translation_id:
          type: string
          description: Unique translation ID
          example: "trans_123456789"
        user_id:
          type: string
          description: User ID
          example: "user_123456789"
        original_text:
          type: string
          example: "Hello, how are you doing today?"
        translated_text:
          type: string
          example: "Yo, what's good fam?"
        direction:
          type: string
          description: Translation direction used
          enum: ["english_to_genz", "genz_to_english"]
          example: "english_to_genz"
        confidence_score:
          type: number
          format: float
          minimum: 0
          maximum: 1
          example: 0.95
        created_at:
          type: string
          format: date-time
          description: "Translation timestamp"
          example: "2024-12-19T10:30:00Z"
        model_used:
          type: string
          description: AI model used for translation
          example: "anthropic.claude-3-haiku-20240307-v1:0"

    TranslationHistoryResponse:
      type: object
      properties:
        translations:
          type: array
          items:
            $ref: '#/components/schemas/TranslationHistoryItemResponse'
        total_count:
          type: integer
          description: Total number of translations
          example: 150
        has_more:
          type: boolean
          description: Whether there are more translations to load
          example: true

    PaginationInfo:
      type: object
      properties:
        total:
          type: integer
          description: Total number of items
          example: 150
        limit:
          type: integer
          description: Number of items per page
          example: 20
        offset:
          type: integer
          description: Number of items skipped
          example: 0
        has_more:
          type: boolean
          description: Whether there are more items
          example: true

    UserProfileResponse:
      type: object
      properties:
        user_id:
          type: string
          example: "user_123456789"
        email:
          type: string
          format: email
          example: "user@example.com"
        username:
          type: string
          description: "Cognito username"
          example: "user123"
        tier:
          type: string
          enum: [free, premium]
          example: "free"
        status:
          type: string
          enum: [active, cancelled, suspended]
          example: "active"
        created_at:
          type: string
          format: date-time
          description: "Account creation date"
          example: "2024-12-01T00:00:00Z"
        updated_at:
          type: string
          format: date-time
          description: "Last update date"
          example: "2024-12-19T10:30:00Z"

    UsageResponse:
      type: object
      properties:
        tier:
          type: string
          enum: [free, premium]
          description: User tier
          example: "free"
        daily_limit:
          type: integer
          description: Daily translation limit
          example: 10
        daily_used:
          type: integer
          description: Number of translations used today
          example: 7
        daily_remaining:
          type: integer
          description: Number of translations remaining today
          example: 3
        reset_date:
          type: string
          format: date-time
          description: "Next daily reset date"
          example: "2024-12-20T00:00:00Z"
        current_max_text_length:
          type: integer
          description: Maximum text length for user's current tier
          example: 50
        free_tier_max_length:
          type: integer
          description: Free tier text length limit
          example: 50
        premium_tier_max_length:
          type: integer
          description: Premium tier text length limit
          example: 100
        free_daily_limit:
          type: integer
          description: Free tier daily translation limit
          example: 10
        premium_daily_limit:
          type: integer
          description: Premium tier daily translation limit
          example: 100

    UsageLimits:
      type: object
      properties:
        free_tier:
          type: integer
          description: Daily translations for free tier
          example: 10
        premium_tier:
          type: integer
          description: Daily translations for premium tier
          example: 100

    UpgradeRequest:
      type: object
      required:
        - platform
        - receipt_data
      properties:
        platform:
          type: string
          enum: [apple, google]
          description: App store platform
          example: "apple"
        receipt_data:
          type: string
          description: Receipt data from app store
          example: "base64_encoded_receipt_data"

    UpgradeResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        tier:
          type: string
          enum: [premium]
          example: "premium"
        expires_at:
          type: string
          format: date-time
          description: "Subscription expiration date"
          example: "2025-01-19T10:30:00Z"

    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Operation completed successfully"

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Always false for error responses
          example: false
        message:
          type: string
          description: Human-readable error message
          example: "Usage limit exceeded for daily_translations. Current: 10, Limit: 10"
        error_code:
          type: string
          description: Application-specific error code
          example: "usagelimitexceedederror"
        status_code:
          type: integer
          description: HTTP status code
          example: 429
        details:
          type: object
          description: Additional error details
          example:
            limit_type: "daily_translations"
            current_usage: 10
            limit: 10
        timestamp:
          type: string
          format: date-time
          description: "Error timestamp"
          example: "2025-01-04T22:21:01.123456Z"
        request_id:
          type: string
          description: Request ID for tracing
          example: "020e424d-1d1c-4ba7-965c-5ddc8e5acb20"

    AppleWebhookRequest:
      type: object
      required:
        - notification_type
        - transaction_id
        - receipt_data
      properties:
        notification_type:
          type: string
          description: Type of Apple subscription notification
          enum:
            - INITIAL_BUY
            - CANCEL
            - RENEWAL
            - INTERACTIVE_RENEWAL
            - DID_CHANGE_RENEWAL_PREF
            - DID_CHANGE_RENEWAL_STATUS
            - PRICE_INCREASE_CONSENT
            - REFUND
            - FAILED_PAYMENT
            - REFUND_DECLINED
            - CONSUMPTION_REQUEST
          example: "INITIAL_BUY"
        transaction_id:
          type: string
          description: Apple transaction ID
          example: "1000000123456789"
        receipt_data:
          type: string
          description: Base64 encoded receipt data from Apple
          example: "ewoJInNpZ25hdHVyZSIgPSAiQWh..."
        environment:
          type: string
          description: Store environment
          enum: [sandbox, production]
          default: production
          example: "production"

    WebhookResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Webhook processed successfully"

    UserSubscriptionResponse:
      type: object
      properties:
        provider:
          type: string
          enum: [apple, google]
          description: Subscription provider
          example: "apple"
        transaction_id:
          type: string
          description: Provider transaction ID
          example: "1000000123456789"
        status:
          type: string
          enum: [active, expired, cancelled]
          description: Subscription status
          example: "active"
        start_date:
          type: string
          format: date-time
          description: "Subscription start date"
          example: "2024-12-01T00:00:00Z"
        end_date:
          type: string
          format: date-time
          description: "Subscription end date"
          example: "2025-12-01T00:00:00Z"
        created_at:
          type: string
          format: date-time
          description: "Record creation date"
          example: "2024-12-01T00:00:00Z"

    ReceiptValidationResponse:
      type: object
      properties:
        is_valid:
          type: boolean
          description: Whether receipt is valid
          example: true
        status:
          type: string
          enum: [valid, invalid, expired, already_used, environment_mismatch, retryable_error]
          description: Validation status
          example: "valid"
        transaction_id:
          type: string
          description: Transaction ID
          example: "1000000123456789"
        product_id:
          type: string
          description: Product ID from receipt
          example: "com.lingible.premium.monthly"
        purchase_date:
          type: string
          format: date-time
          description: "Purchase date"
          example: "2024-12-01T00:00:00Z"
        expiration_date:
          type: string
          format: date-time
          description: "Expiration date"
          example: "2025-01-01T00:00:00Z"
        environment:
          type: string
          enum: [sandbox, production]
          description: Environment
          example: "production"
        error_message:
          type: string
          description: Error message if validation failed
          example: "Receipt validation failed"
        retry_after:
          type: integer
          description: Seconds to wait before retry
          example: 60

    TrendingTermResponse:
      type: object
      properties:
        term:
          type: string
          description: The slang term or phrase
          example: "no cap"
        definition:
          type: string
          description: Definition or explanation of the term
          example: "No lie, for real, I'm telling the truth"
        category:
          type: string
          enum: [slang, meme, expression, hashtag, phrase]
          description: Category of the trending term
          example: "slang"
        popularity_score:
          type: number
          format: float
          minimum: 0.0
          maximum: 100.0
          description: Popularity score (0-100)
          example: 85.5
        search_count:
          type: integer
          minimum: 0
          description: Number of times searched
          example: 1250
        translation_count:
          type: integer
          minimum: 0
          description: Number of times translated
          example: 890
        first_seen:
          type: string
          format: date-time
          description: "When this term was first detected"
          example: "2024-12-01T00:00:00Z"
        last_updated:
          type: string
          format: date-time
          description: "Last time metrics were updated"
          example: "2024-12-19T10:30:00Z"
        is_active:
          type: boolean
          description: Whether this term is currently trending
          example: true
        example_usage:
          type: string
          description: Example of how the term is used
          example: "That movie was fire, no cap!"
        origin:
          type: string
          description: Origin or source of the term
          example: "Hip hop culture"
        related_terms:
          type: array
          items:
            type: string
          description: Related slang terms
          example: ["fr", "for real", "deadass"]

    TrendingListResponse:
      type: object
      properties:
        terms:
          type: array
          items:
            $ref: '#/components/schemas/TrendingTermResponse'
          description: List of trending terms
        total_count:
          type: integer
          description: Total number of trending terms
          example: 150
        last_updated:
          type: string
          format: date-time
          description: "When the trending data was last updated"
          example: "2024-12-19T10:30:00Z"
        category_filter:
          type: string
          enum: [slang, meme, expression, hashtag, phrase]
          description: Applied category filter
          example: "slang"
